// Code generated by protoc-gen-go. DO NOT EDIT.
// source: whinvitesvr.proto

package whinvitesvr

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EchoReq struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoReq) Reset()         { *m = EchoReq{} }
func (m *EchoReq) String() string { return proto.CompactTextString(m) }
func (*EchoReq) ProtoMessage()    {}
func (*EchoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c4b1adf9f7980a4, []int{0}
}

func (m *EchoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoReq.Unmarshal(m, b)
}
func (m *EchoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoReq.Marshal(b, m, deterministic)
}
func (m *EchoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoReq.Merge(m, src)
}
func (m *EchoReq) XXX_Size() int {
	return xxx_messageInfo_EchoReq.Size(m)
}
func (m *EchoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoReq.DiscardUnknown(m)
}

var xxx_messageInfo_EchoReq proto.InternalMessageInfo

func (m *EchoReq) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EchoReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EchoRsp struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoRsp) Reset()         { *m = EchoRsp{} }
func (m *EchoRsp) String() string { return proto.CompactTextString(m) }
func (*EchoRsp) ProtoMessage()    {}
func (*EchoRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c4b1adf9f7980a4, []int{1}
}

func (m *EchoRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoRsp.Unmarshal(m, b)
}
func (m *EchoRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoRsp.Marshal(b, m, deterministic)
}
func (m *EchoRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoRsp.Merge(m, src)
}
func (m *EchoRsp) XXX_Size() int {
	return xxx_messageInfo_EchoRsp.Size(m)
}
func (m *EchoRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoRsp.DiscardUnknown(m)
}

var xxx_messageInfo_EchoRsp proto.InternalMessageInfo

func (m *EchoRsp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetInviteInfoReq struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Src                  string   `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInviteInfoReq) Reset()         { *m = GetInviteInfoReq{} }
func (m *GetInviteInfoReq) String() string { return proto.CompactTextString(m) }
func (*GetInviteInfoReq) ProtoMessage()    {}
func (*GetInviteInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c4b1adf9f7980a4, []int{2}
}

func (m *GetInviteInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInviteInfoReq.Unmarshal(m, b)
}
func (m *GetInviteInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInviteInfoReq.Marshal(b, m, deterministic)
}
func (m *GetInviteInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInviteInfoReq.Merge(m, src)
}
func (m *GetInviteInfoReq) XXX_Size() int {
	return xxx_messageInfo_GetInviteInfoReq.Size(m)
}
func (m *GetInviteInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInviteInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetInviteInfoReq proto.InternalMessageInfo

func (m *GetInviteInfoReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GetInviteInfoReq) GetSrc() string {
	if m != nil {
		return m.Src
	}
	return ""
}

type GetInviteInfoRsp struct {
	Vcode                string   `protobuf:"bytes,1,opt,name=vcode,proto3" json:"vcode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInviteInfoRsp) Reset()         { *m = GetInviteInfoRsp{} }
func (m *GetInviteInfoRsp) String() string { return proto.CompactTextString(m) }
func (*GetInviteInfoRsp) ProtoMessage()    {}
func (*GetInviteInfoRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c4b1adf9f7980a4, []int{3}
}

func (m *GetInviteInfoRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInviteInfoRsp.Unmarshal(m, b)
}
func (m *GetInviteInfoRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInviteInfoRsp.Marshal(b, m, deterministic)
}
func (m *GetInviteInfoRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInviteInfoRsp.Merge(m, src)
}
func (m *GetInviteInfoRsp) XXX_Size() int {
	return xxx_messageInfo_GetInviteInfoRsp.Size(m)
}
func (m *GetInviteInfoRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInviteInfoRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetInviteInfoRsp proto.InternalMessageInfo

func (m *GetInviteInfoRsp) GetVcode() string {
	if m != nil {
		return m.Vcode
	}
	return ""
}

func init() {
	proto.RegisterType((*EchoReq)(nil), "whinvitesvr.EchoReq")
	proto.RegisterType((*EchoRsp)(nil), "whinvitesvr.EchoRsp")
	proto.RegisterType((*GetInviteInfoReq)(nil), "whinvitesvr.GetInviteInfoReq")
	proto.RegisterType((*GetInviteInfoRsp)(nil), "whinvitesvr.GetInviteInfoRsp")
}

func init() {
	proto.RegisterFile("whinvitesvr.proto", fileDescriptor_0c4b1adf9f7980a4)
}

var fileDescriptor_0c4b1adf9f7980a4 = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0xcf, 0xc8, 0xcc,
	0x2b, 0xcb, 0x2c, 0x49, 0x2d, 0x2e, 0x2b, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x46,
	0x12, 0x52, 0xd2, 0xe5, 0x62, 0x77, 0x4d, 0xce, 0xc8, 0x0f, 0x4a, 0x2d, 0x14, 0xe2, 0xe3, 0x62,
	0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x09, 0x62, 0xca, 0x4c, 0x11, 0x12, 0xe2, 0x62,
	0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0x94, 0xa1,
	0xca, 0x8b, 0x0b, 0x84, 0x24, 0xb8, 0xd8, 0x73, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0xc1, 0x7a,
	0x38, 0x83, 0x60, 0x5c, 0x25, 0x33, 0x2e, 0x01, 0xf7, 0xd4, 0x12, 0x4f, 0xb0, 0x1d, 0x9e, 0x79,
	0x69, 0x60, 0xc3, 0x05, 0xb8, 0x98, 0x4b, 0xe1, 0xa6, 0x83, 0x98, 0x20, 0x91, 0xe2, 0xa2, 0x64,
	0xa8, 0xe9, 0x20, 0xa6, 0x92, 0x06, 0xba, 0xbe, 0xe2, 0x02, 0x21, 0x11, 0x2e, 0xd6, 0xb2, 0xe4,
	0xfc, 0x14, 0x98, 0x1d, 0x10, 0x8e, 0xd1, 0x14, 0x46, 0x2e, 0xee, 0x70, 0xa8, 0x2f, 0x82, 0xcb,
	0x8a, 0x84, 0x4c, 0xb8, 0x58, 0x40, 0xce, 0x12, 0x12, 0xd1, 0x43, 0xf6, 0x2e, 0xd4, 0x63, 0x52,
	0x58, 0x44, 0x8b, 0x0b, 0x94, 0x18, 0x84, 0xfc, 0xb9, 0x78, 0x51, 0xec, 0x13, 0x92, 0x45, 0x51,
	0x88, 0xee, 0x07, 0x29, 0x7c, 0xd2, 0x20, 0x03, 0x93, 0xd8, 0xc0, 0x01, 0x6c, 0x0c, 0x08, 0x00,
	0x00, 0xff, 0xff, 0xdd, 0x20, 0xa0, 0x27, 0x75, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WhinviteSvrClient is the client API for WhinviteSvr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WhinviteSvrClient interface {
	Echo(ctx context.Context, in *EchoReq, opts ...grpc.CallOption) (*EchoRsp, error)
	GetInviteInfo(ctx context.Context, in *GetInviteInfoReq, opts ...grpc.CallOption) (*GetInviteInfoRsp, error)
}

type whinviteSvrClient struct {
	cc grpc.ClientConnInterface
}

func NewWhinviteSvrClient(cc grpc.ClientConnInterface) WhinviteSvrClient {
	return &whinviteSvrClient{cc}
}

func (c *whinviteSvrClient) Echo(ctx context.Context, in *EchoReq, opts ...grpc.CallOption) (*EchoRsp, error) {
	out := new(EchoRsp)
	err := c.cc.Invoke(ctx, "/whinvitesvr.WhinviteSvr/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whinviteSvrClient) GetInviteInfo(ctx context.Context, in *GetInviteInfoReq, opts ...grpc.CallOption) (*GetInviteInfoRsp, error) {
	out := new(GetInviteInfoRsp)
	err := c.cc.Invoke(ctx, "/whinvitesvr.WhinviteSvr/GetInviteInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WhinviteSvrServer is the server API for WhinviteSvr service.
type WhinviteSvrServer interface {
	Echo(context.Context, *EchoReq) (*EchoRsp, error)
	GetInviteInfo(context.Context, *GetInviteInfoReq) (*GetInviteInfoRsp, error)
}

// UnimplementedWhinviteSvrServer can be embedded to have forward compatible implementations.
type UnimplementedWhinviteSvrServer struct {
}

func (*UnimplementedWhinviteSvrServer) Echo(ctx context.Context, req *EchoReq) (*EchoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Echo not implemented")
}
func (*UnimplementedWhinviteSvrServer) GetInviteInfo(ctx context.Context, req *GetInviteInfoReq) (*GetInviteInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInviteInfo not implemented")
}

func RegisterWhinviteSvrServer(s *grpc.Server, srv WhinviteSvrServer) {
	s.RegisterService(&_WhinviteSvr_serviceDesc, srv)
}

func _WhinviteSvr_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EchoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhinviteSvrServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whinvitesvr.WhinviteSvr/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhinviteSvrServer).Echo(ctx, req.(*EchoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _WhinviteSvr_GetInviteInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInviteInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhinviteSvrServer).GetInviteInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whinvitesvr.WhinviteSvr/GetInviteInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhinviteSvrServer).GetInviteInfo(ctx, req.(*GetInviteInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _WhinviteSvr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "whinvitesvr.WhinviteSvr",
	HandlerType: (*WhinviteSvrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _WhinviteSvr_Echo_Handler,
		},
		{
			MethodName: "GetInviteInfo",
			Handler:    _WhinviteSvr_GetInviteInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "whinvitesvr.proto",
}
